{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "dosato",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#typeNames"
		},
		{
			"include": "#masterStatements"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.dosato",
					"match": "(?i)\\b(WHEN|CATCH|WHILE|ELSE|THEN|IF|FOR|OTHER|AS)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.dosato",
			"patterns": [
				{
					"name": "constant.character.escape.dosato",
					"match": "\\\\."
				},
				{
					"name": "string.quoted.single.dosato",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.dosato",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.double.dosato",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.dosato",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.template.dosato",
					"begin": "`",
					"end": "`",
					"patterns": [
						{
							"name": "interpolation.dosato",
							"begin": "\\{",
							"end": "\\}",
							"contentName": "meta.embedded.block.dosato",
							"patterns": [
								{
									"begin": "\\{",
									"end": "\\}",
									"name": "meta.object-literal.dosato",
									"patterns": [
										{
											"include": "source.to"
										}
									]
								},
								{
									"include": "source.to"
								}
							]
						},
						{
							"name": "constant.character.escape.dosato",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.dosato",
					"match": "//.*$"
				},
				{
					"name": "comment.block.dosato",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.dosato",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				},
				{
					"name": "constant.numeric.hexadecimal.dosato",
					"match": "\\b0[xX][0-9a-fA-F]+\\b"
				},
				{
					"name": "constant.numeric.binary.dosato",
					"match": "\\b0[bB][01]+\\b"
				},
				{
					"name": "constant.numeric.octal.dosato",
					"match": "\\b0[oO]?[0-7]+\\b"
				}
			]
		},
		"typeNames": {
			"patterns": [
				{
					"name": "storage.type.dosato",
					"match": "(?i)\\b(INT|BOOL|STRING|FLOAT|DOUBLE|CHAR|SHORT|LONG|BYTE|VOID|ARRAY|UINT|USHORT|ULONG|USHORT|ULONG|UBYTE|OBJECT|VAR|FUNCTION|TRUE|FALSE|NULL|INFINITY|NAN|SELF)\\b"
				}
			]
		},
		"masterStatements": {
			"patterns": [
				{
					"name": "keyword.control.master.dosato",
					"match": "(?i)\\b(DO|SET|MAKE|DEFINE|IMPORT|INCLUDE|RETURN|CONTINUE|BREAK|SWITCH|CONST|CLASS|IMPLEMENT|ENUM)\\b",
					"foreground": "#00FF00"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "entity.name.function.dosato",
					"match": "\\b[A-Za-z_][A-Za-z0-9_]*\\s*(?=\\()"
				},
				{
					"name": "variable.other.dosato",
					"match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
				}
			]
		}
	},
	"scopeName": "source.to"
}